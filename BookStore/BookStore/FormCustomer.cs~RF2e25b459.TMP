using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Text.RegularExpressions;
using System.IO;
using System.Data;

namespace BookStore
{
    public partial class FormCustomer : Form
    {
        DataTable DT;
        int id;
        public FormCustomer()
        {
            InitializeComponent();
            this.CenterToScreen();
            
        }
        private void FormCustomer_Load(object sender, EventArgs e)
        {
            WriteInComboBox();
            LoadDataInCombo();
            DisableFields();
        }
        private void DisableFields()
        {
            Title.Enabled = false;
            Author.Enabled = false;
            ISBN.Enabled = false;
            Price.Enabled = false;
        }
        private void EnableFileds()
        {
            FirstName.Enabled = true;
            LastName.Enabled = true;
            City.Enabled = true;
            Address.Enabled = true;
            Zip.Enabled = true;
            Phone.Enabled = true;
            State.Enabled = true;
            Email.Enabled = true;
        }
        private void ClearFields()
        {
            FirstName.Text = "";
            LastName.Text = "";
            City.Text = "";
            Address.Text = "";
            Zip.Text = "";
            Phone.Text = "";
            State.Text = "";
            Email.Text = "";
        }

        private void comboBox1_SelectedIndexChanged(object sender, EventArgs e)
        {
            index = Options.SelectedIndex;
            FirstName.Text = Customers[index].FirstName;
            LastName.Text = Customers[index].LastName;
            City.Text = Customers[index].City;
            Address.Text = Customers[index].Address;
            Zip.Text = Customers[index].Zip;
            Phone.Text = Customers[index].Phone;
            State.Text = Customers[index].State;
            Email.Text = Customers[index].Email;
            edit = true;
        }

        private void FirstName_TextChanged(object sender, EventArgs e)
        {
   
        }

        private void Save_Click(object sender, EventArgs e)
        {
            Options.Enabled = true;
            if (!Regex.IsMatch(FirstName.Text, "[a-zA-Z]{1,}"))
            {
                MessageBox.Show("Please enter proper First Name", "Warning");
                FirstName.Focus();
            }
            else if (!Regex.IsMatch(LastName.Text, "[a-zA-Z]{1,}"))
            {
                MessageBox.Show("Please enter proper Last Name", "Warning");
                LastName.Focus();
            }
            else if (!Regex.IsMatch(City.Text, @"^([a-zA-Z]+|[a-zA-Z]+\s[a-zA-Z]+)$"))
            {
                MessageBox.Show("Please enter proper City", "Warning");
                City.Focus();
            }
            else if (!Regex.IsMatch(Address.Text, @"^([a-zA-Z]+|[a-zA-Z]+\s[a-zA-Z]+)$"))
            {
                MessageBox.Show("Please enter proper Address", "Warning");
                Address.Focus();
            }
            else if (!Regex.IsMatch(State.Text, @"^([a-zA-Z]+|[a-zA-Z]+\s[a-zA-Z]+)$"))
            {
                MessageBox.Show("Please enter proper State", "Warning");
                State.Focus();
            }
            else if (!Regex.IsMatch(Zip.Text, @"^\d{5}(?:[-\s]\d{4})?$"))
            {
                MessageBox.Show("Please enter proper Zip code", "Warning");
                Zip.Focus();
            }
            else if (!Regex.IsMatch(Phone.Text, "[+(995)0-9]{10}"))
            {
                MessageBox.Show("Please enter proper Phone Number (pattern : +995 *** ***)", "Warning");
                Phone.Focus();
            }
            else if (!Regex.IsMatch(Email.Text, "^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$"))
            {
                MessageBox.Show("Please enter proper Email Address", "Warning");
                Email.Focus();
            }
            else{
                string Path = "Customers.txt";
                if (edit)
                {
                    DeleteLine(Path, index);
                    WriteCustomer(Path);
                    WriteInComboBox();
                    MessageBox.Show("Your personal data is edited!", "Success");
                }
                else
                {
                    WriteCustomer(Path);
                    WriteInComboBox();
                    MessageBox.Show("Your personal data is saved!", "Success");
                }
                

            }
        }

        private void WriteInComboBox()
        {
            //string Path = "Customers.txt";
            //Read(Path);

            foreach(var item in Customers)
            {
                Options.Items.Add($"{item.FirstName} {item.LastName}");
            }
        }

        private void Back_Click(object sender, EventArgs e)
        {
            Menu m = new Menu();
            this.Hide();
            m.Show();
        }

       

        private void NewCustomer_Click(object sender, EventArgs e)
        {
            FirstName.Text = null;
            LastName.Text = null;
            City.Text = null;
            Address.Text = null;
            Zip.Text = null;
            Phone.Text = null;
            State.Text = null;
            Email.Text = null;
            Options.Enabled = true;
            edit = false;
            Options.Enabled = false;
            FirstName.Focus();

        }

        private void Cancel_Click(object sender, EventArgs e)
        {
            FirstName.Text = null;
            LastName.Text = null;
            City.Text = null;
            Address.Text = null;
            Zip.Text = null;
            Phone.Text = null;
            State.Text = null;
            Email.Text = null;
            Options.Enabled = true;
            edit = false;
        }
    }
}
